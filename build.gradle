plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.diffplug.spotless' version '6.23.3'
}

group = 'com.becareful'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jar {
    enabled = false;
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // SMS
    implementation 'net.nurigo:sdk:4.3.2'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // JWT
    implementation "io.jsonwebtoken:jjwt-api:0.12.3"
    implementation "io.jsonwebtoken:jjwt-impl:0.12.3"
    implementation "io.jsonwebtoken:jjwt-jackson:0.12.3"

    // Dotenv
    implementation("me.paulschwarz:spring-dotenv:3.0.0")

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

spotless {
    format 'misc', {
        target '**/*.gradle', '**/*.md'
        trimTrailingWhitespace()
        indentWithSpaces(4)
        endWithNewline()
    }

    java {
        removeUnusedImports()
        palantirJavaFormat()
        formatAnnotations()
    }

    yaml {
        target '**/*.yml'
        prettier()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
